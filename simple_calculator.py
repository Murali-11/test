ZGVmIGNhbGN1bGF0b3IoKToKICAgIHByaW50KCJTaW1wbGUgQ2FsY3VsYXRvciIpCiAgICBwcmludCgiMS4gQWRkIikKICAgIHByaW50KCIyLiBTdWJ0cmFjdCIpCiAgICBwcmludCgiMy4gTXVsdGlwbHkiKQogICAgcHJpbnQoIjQuIERpdmlkZSIpCiAgICAKICAgIHRyeToKICAgICAgICAjIEdldCB1c2VyIGlucHV0CiAgICAgICAgY2hvaWNlID0gaW50KGlucHV0KCJFbnRlciBjaG9pY2UgKDEtNCk6ICIpKQogICAgICAgIG51bTEgPSBmbG9hdChpbnB1dCgiRW50ZXIgZmlyc3QgbnVtYmVyOiAiKSkKICAgICAgICBudW0yID0gZmxvYXQoaW5wdXQoIkVudGVyIHNlY29uZCBudW1iZXI6ICIpKQogICAgICAgIAogICAgICAgICMgUGVyZm9ybSBjYWxjdWxhdGlvbiBiYXNlZCBvbiBjaG9pY2UKICAgICAgICBpZiBjaG9pY2UgPT0gMToKICAgICAgICAgICAgcmVzdWx0ID0gbnVtMSArIG51bTIKICAgICAgICAgICAgb3BlcmF0aW9uID0gIisiCiAgICAgICAgZWxpZiBjaG9pY2UgPT0gMjoKICAgICAgICAgICAgcmVzdWx0ID0gbnVtMSAtIG51bTIKICAgICAgICAgICAgb3BlcmF0aW9uID0gIi0iCiAgICAgICAgZWxpZiBjaG9pY2UgPT0gMzoKICAgICAgICAgICAgcmVzdWx0ID0gbnVtMSAqIG51bTIKICAgICAgICAgICAgb3BlcmF0aW9uID0gIioiCiAgICAgICAgZWxpZiBjaG9pY2UgPT0gNDoKICAgICAgICAgICAgaWYgbnVtMiA9PSAwOgogICAgICAgICAgICAgICAgcmV0dXJuICJFcnJvcjogQ2Fubm90IGRpdmlkZSBieSB6ZXJvIgogICAgICAgICAgICByZXN1bHQgPSBudW0xIC8gbnVtMgogICAgICAgICAgICBvcGVyYXRpb24gPSA